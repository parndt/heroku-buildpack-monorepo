#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"

if [ ! -f "${ENV_DIR}/APP_BASE" ]; then
    echo "APP_BASE was not set. Aborting" | indent
    exit 1
fi
if [ ! -f "${ENV_DIR}/SUPPORT_DIR" ]; then
    echo "SUPPORT_DIR was not set. Aborting" | indent
    exit 1
fi
APP_BASE="$(cat "${ENV_DIR}/APP_BASE")"
SUPPORT_DIR="$(cat "${ENV_DIR}/SUPPORT_DIR")"

(
    mv "${BUILD_DIR}/${APP_BASE}" "${STAGE}" &&
    mv "${BUILD_DIR}/${SUPPORT_DIR}" "${STAGE}/${APP_BASE}" &&
    sed -i "s/file:\.\.\/${SUPPORT_DIR}/file:\.\/${SUPPORT_DIR}/" "${STAGE}/${APP_BASE}/package.json" &&
    sed -i "s/file:\.\.\/${SUPPORT_DIR}/file:\.\/${SUPPORT_DIR}/" "${STAGE}/${APP_BASE}/package-lock.json" &&
    rm -rf "${BUILD_DIR}"/* &&
    mv "${STAGE}/$(basename "$APP_BASE")"/* "${BUILD_DIR}"
)

if [ $? -ne 0 ]; then
    echo "FAILED to copy directory into place or substitute support dir" | indent
    exit 1
fi

echo "Copied ${APP_BASE} to root of app successfully" | indent
echo "Copied ${SUPPORT_DIR} to root of ${APP_BASE} successfully" | indent
